install.packages("PNADcIBGE")
pnadc.svy <- get_pnadc(year=2019,  topic=4)
library(PNADcIBGE)
pnadc.svy <- get_pnadc(year=2019,  topic=4)
pnadc.svy <- get_pnadc(year=2019,  topic=1)
pnadc.svy <- get_pnadc(year=2019, interview=1)
library(readr)
PNADC_2019_visita1 <- read_table2("GEM UNESCO MBR/Datasets to update WIDE/Other surveys/Brazil/PNADC_2019_visita1.txt")
View(PNADC_2019_visita1)
library(PNADcIBGE)
# Using data read from disk
input_path <- pnadc_example(path="input_example.txt")
data_path <- pnadc_example(path="exampledata.txt")
dictionary.path <- pnadc_example(path="dictionaryexample.xls")
pnadc.df <- read_pnadc(microdata=data_path, input_txt=input_path, vars="VD4002")
pnadc.df <- pnadc_labeller(data_pnadc=pnadc.df, dictionary.file=dictionary.path)
## Not run:
# Downloading data
pnadc.df2 <- get_pnadc(year=2017, quarter=4, vars="VD4002", defyear=2017, defperiod=4,
labels=FALSE, deflator=FALSE, design=FALSE, savedir=tempdir())
dictionary.path2 <- pnadc_example(path="dictionaryexample.xls")
pnadc.df2 <- pnadc_labeller(data_pnadc=pnadc.df2, dictionary.file=dictionary.path2)
View(pnadc.df)
View(pnadc.df2)
# Downloading data
pnadc.df3 <- get_pnadc(year=2019, interview = 1, defyear=2019,
labels=TRUE, deflator=TRUE, design=TRUE, savedir=tempdir())
dictionary.path2 <- pnadc_example(path="dicionario_PNADC_microdados_2019_visita1_20200826.xls")
pnadc.df3 <- pnadc_labeller(data_pnadc=pnadc.df2, dictionary.file=dictionary.path2)
pnadc.df3 <- get_pnadc(year=2019, interview = 1, defyear=2019,
labels=TRUE, deflator=TRUE, design=TRUE, savedir=tempdir())
View(pnadc.df3)
pnadc.df3 <- get_pnadc(year=2019, interview = 1, defyear=2019,
labels=TRUE, deflator=TRUE, design=FALSE, savedir=tempdir())
pnadc.df3 <- pnadc_labeller(data_pnadc=pnadc.df2, dictionary.file="dicionario_PNADC_microdados_2019_visita1_20200826.xls")
pnadc.df3 <- get_pnadc(year=2019, interview = 1, defyear=2019,
labels=TRUE, deflator=TRUE, design=FALSE, savedir=tempdir())
pnadc.df3 <- pnadc_labeller(data_pnadc=pnadc.df3, dictionary.file="dicionario_PNADC_microdados_2019_visita1_20200826.xls")
View(pnadc.df3)
pnadc.df3 <- pnadc_labeller(data_pnadc=pnadc.df3, dictionary.file="dicionario_PNADC_microdados_2019_visita1_20200826.xls")
pnadc.df3 <- pnadc_labeller(data_pnadc=pnadc.df3, dictionary.file=dicionario_PNADC_microdados_2019_visita1_20200826)
dictionary.path <- pnadc_example(path="dicionario_PNADC_microdados_2019_visita1_20200826.xls")
pnadc.df3 <- pnadc_labeller(data_pnadc=pnadc.df3, dictionary.file=dictionary.path)
dictionary.path2 <- pnadc_example(path="dictionaryexample.xls")
pnadc.df2 <- pnadc_labeller(data_pnadc=pnadc.df3, dictionary.file=dictionary.path2)
View(pnadc.df3)
View(pnadc.df3)
library(foreign)
write.dta(pnadc.df3, "C:\Users\taiku\Documents\GEM UNESCO MBR\Datasets to update WIDE\Other surveys\Brazil\PNADanualvisita1.dta")
write.dta(pnadc.df3, "c:/PNADanualvisita1.dta")
warning()
write.dta(pnadc.df3, "PNADanualvisita1.dta")
warnings()
pnadc.df2 <- pnadc_labeller(data_pnadc=pnadc.df3)
display dictionary.path
dictionary.path
pnadc.df2 <- pnadc_labeller(data_pnadc=pnadc.df3, dictionary.file="C:/Users/taiku/Documents/R/win-library/4.0/PNADcIBGE/extdata/dicionario_PNADC_microdados_2019_visita1_20200826.xls")
library(haven)
install.packages("haven")
install.packages("readr")
library(haven)
library(haven)
library(haven)
data <- read_dta("C:\WIDE\output\MICS\data\dhs_standardize_small.dta") # change this path (DHS)
data <- read_dta("C:/WIDE/output/MICS/data/dhs_standardize_small.dta") # change this path (DHS)
data <- read_dta("/WIDE/output/MICS/data/dhs_standardize_small.dta") # change this path (DHS)
library(haven)
dhs_standardize_small <- read_dta("C:/WIDE/output/DHS/data/dhs_standardize_small.dta")
View(dhs_standardize_small)
condition <- with(data, schage >= prim_age1+3 & schage <= prim_age1+5)
data <- dhs_standardize_small
condition <- with(data, schage >= prim_age1+3 & schage <= prim_age1+5)
data$comp_prim_v2_age = with(data, ifelse(condition == FALSE, NA,
ifelse(comp_prim == 1, 1, 0)))
View(data)
View(data)
tab1(data$comp_prim_v2)
View(data)
library(haven)
library(haven)
library(haven)
(please install packages beforehand)
library(haven)
library(haven)
data <- read_dta("Desktop/gemr/new_etl/mics_standardize_small_multi.dta") # change this path
data <- read_dta("C:\WIDE\output\MICS\data\mics_standardize_small.dta") # change this path
data <- read_dta("C:/WIDE/output/MICS/data/mics_standardize_small.dta") # change this path
# CALCULATE: Completion by education level
# primary
condition <- with(data, schage >= prim_age1+3 & schage <= prim_age1+5) # age limits condition
data$comp_prim_v2 = with(data, ifelse(condition == FALSE, NA, # if age condition is FALSE, return NA
ifelse(comp_prim == 1, 1, 0))) # else if age condition is TRUE & comp_prim=1, return 1, otherwise (i.e. condition is TRUE & comp_prim=0), return 0
# lower secondary
condition <- with(data, schage >= lowsec_age1+3 & schage <= lowsec_age1+5)
data$comp_lowsec_v2 = with(data, ifelse(condition == FALSE, NA,
ifelse(comp_lowsec == 1, 1, 0)))
# upper secondary
condition <- with(data, schage >= upsec_age1+3 & schage <= upsec_age1+5)
data$comp_upsec_v2 = with(data, ifelse(condition == FALSE, NA,
ifelse(comp_upsec == 1, 1, 0)))
# CALCULATE: Completion by education level and age
# primary
condition <- with(data, schage >= 15 & schage <= 24)
data$comp_prim_1524 = with(data, ifelse(condition == FALSE, NA,
ifelse(comp_prim == 1, 1, 0)))
# lower secondary
condition <- with(data, schage >= 15 & schage <= 24)
data$comp_lowsec_1524 = with(data, ifelse(condition == FALSE, NA,
ifelse(comp_lowsec == 1, 1, 0)))
# upper secondary
condition <- with(data, schage >= 20 & schage <= 29)
data$comp_upsec_2029 = with(data, ifelse(condition == FALSE, NA,
ifelse(comp_upsec == 1, 1, 0)))
# CALCULATE: Never been to school
# primary
condition <- with(data, schage >= prim_age0+3 & schage <= prim_age0+6)
data$edu0_prim = with(data, ifelse(condition == FALSE, NA,
ifelse(edu0 == 1, 1, 0)))
# CALCULATE: Completion in higher education
condition <- with(data, schage >= 25 & schage <= 29)
data$comp_higher_2yrs_2529 = with(data, ifelse(condition == FALSE, NA,
ifelse(comp_higher_2yrs == 1, 1, 0)))
data$comp_higher_4yrs_2529 = with(data, ifelse(condition == FALSE, NA,
ifelse(comp_higher_4yrs == 1, 1, 0)))
condition <- with(data, schage >= 30 & schage <= 34)
data$comp_higher_4yrs_3034 = with(data, ifelse(condition == FALSE, NA,
ifelse(comp_higher_4yrs == 1, 1, 0)))
# CALCULATE: Out of school by education level
# primary (Note: variable "prim_age0_eduout" is replaced by "prim_age0")
condition <- with(data, schage >= prim_age0 & schage <= prim_age1_eduout)
data$eduout_prim = with(data, ifelse(condition == FALSE, NA,
ifelse(eduout == 1, 1, 0)))
# lower secondary
condition <- with(data, schage >= lowsec_age0_eduout & schage <= lowsec_age1_eduout)
data$eduout_lowsec = with(data, ifelse(condition == FALSE, NA,
ifelse(eduout == 1, 1, 0)))
# upper secondary
condition <- with(data, schage >= upsec_age0_eduout & schage <= upsec_age1_eduout)
data$eduout_upsec = with(data, ifelse(condition == FALSE, NA,
ifelse(eduout == 1, 1, 0)))
# CALCULATE: Attendance in preschool
# Note: These indicators are only available in MICS
if (data$survey[1] == "MICS") {
condition <- with(data, schage >= 3 & schage <= 4)
data$preschool_3 = with(data, ifelse(condition == FALSE, NA, ifelse(attend_preschool == 1, 1, 0)))
} else {
print("This indicator is only available in MICS")
}
# Note: variable "prim_age0_eduout" is replaced by "prim_age0"
if (data$survey[1] == "MICS") {
condition <- with(data, schage == prim_age0 - 1)
data$preschool_1ybefore = with(data, ifelse(condition == FALSE, NA, ifelse(attend_preschool == 1, 1, 0)))
} else {
print("This indicator is only available in MICS")
}
# CALCULATE: Attendance in higher education
condition <- with(data, schage >= 18 & schage <= 22)
data$attend_higher_1822 = with(data, ifelse(condition == FALSE, NA,
ifelse(attend_higher == 1, 1, 0)))
# CALCULATE: Education years for age between 20 and 24
condition <- with(data, schage >= 20 & schage <= 24)
data$eduyears_2024 = with(data, ifelse(condition == FALSE, NA,
ifelse(eduyears == 1, 1, 0)))
condition <- with(data, schage >= 20 & schage <= 24)
data$edu4_2024 = with(data, ifelse(condition == FALSE, NA,
ifelse(edu4 == 1, 1, 0)))
## TODO:
# include "overage2plus", "country", "edu4" in DHS standardize - Marcela working
# change into "literacy_1524" in MICS standardize - Marcela working
# calculate "household_edu" - Sunmin working
# Export data as .rds format
saveRDS(data, file="Desktop/gemr/new_etl/wide_calculate.rds")
saveRDS(data, file="C:/WIDE/output/MICS/R_output/wide_calculate.rds")
View(data)
View(data)
data <- read_dta("C:/WIDE/output/DHS/data/dhs_standardize.dta") # change this path
library(haven)
data <- read_dta("C:/WIDE/output/DHS/data/dhs_standardize.dta") # change this path
# CALCULATE: Completion by education level
# primary
condition <- with(data, schage >= prim_age1+3 & schage <= prim_age1+5) # age limits condition
data$comp_prim_v2 = with(data, ifelse(condition == FALSE, NA, # if age condition is FALSE, return NA
ifelse(comp_prim == 1, 1, 0))) # else if age condition is TRUE & comp_prim=1, return 1, otherwise (i.e. condition is TRUE & comp_prim=0), return 0
# lower secondary
condition <- with(data, schage >= lowsec_age1+3 & schage <= lowsec_age1+5)
data$comp_lowsec_v2 = with(data, ifelse(condition == FALSE, NA,
ifelse(comp_lowsec == 1, 1, 0)))
# upper secondary
condition <- with(data, schage >= upsec_age1+3 & schage <= upsec_age1+5)
data$comp_upsec_v2 = with(data, ifelse(condition == FALSE, NA,
ifelse(comp_upsec == 1, 1, 0)))
# CALCULATE: Completion by education level and age
# primary
condition <- with(data, schage >= 15 & schage <= 24)
data$comp_prim_1524 = with(data, ifelse(condition == FALSE, NA,
ifelse(comp_prim == 1, 1, 0)))
# lower secondary
condition <- with(data, schage >= 15 & schage <= 24)
data$comp_lowsec_1524 = with(data, ifelse(condition == FALSE, NA,
ifelse(comp_lowsec == 1, 1, 0)))
# upper secondary
condition <- with(data, schage >= 20 & schage <= 29)
data$comp_upsec_2029 = with(data, ifelse(condition == FALSE, NA,
ifelse(comp_upsec == 1, 1, 0)))
# CALCULATE: Never been to school
# primary
condition <- with(data, schage >= prim_age0+3 & schage <= prim_age0+6)
data$edu0_prim = with(data, ifelse(condition == FALSE, NA,
ifelse(edu0 == 1, 1, 0)))
# CALCULATE: Completion in higher education
condition <- with(data, schage >= 25 & schage <= 29)
data$comp_higher_2yrs_2529 = with(data, ifelse(condition == FALSE, NA,
ifelse(comp_higher_2yrs == 1, 1, 0)))
data$comp_higher_4yrs_2529 = with(data, ifelse(condition == FALSE, NA,
ifelse(comp_higher_4yrs == 1, 1, 0)))
condition <- with(data, schage >= 30 & schage <= 34)
data$comp_higher_4yrs_3034 = with(data, ifelse(condition == FALSE, NA,
ifelse(comp_higher_4yrs == 1, 1, 0)))
# CALCULATE: Out of school by education level
# primary (Note: variable "prim_age0_eduout" is replaced by "prim_age0")
condition <- with(data, schage >= prim_age0 & schage <= prim_age1_eduout)
data$eduout_prim = with(data, ifelse(condition == FALSE, NA,
ifelse(eduout == 1, 1, 0)))
# lower secondary
condition <- with(data, schage >= lowsec_age0_eduout & schage <= lowsec_age1_eduout)
data$eduout_lowsec = with(data, ifelse(condition == FALSE, NA,
ifelse(eduout == 1, 1, 0)))
# upper secondary
condition <- with(data, schage >= upsec_age0_eduout & schage <= upsec_age1_eduout)
data$eduout_upsec = with(data, ifelse(condition == FALSE, NA,
ifelse(eduout == 1, 1, 0)))
# CALCULATE: Attendance in preschool
# Note: These indicators are only available in MICS
if (data$survey[1] == "MICS") {
condition <- with(data, schage >= 3 & schage <= 4)
data$preschool_3 = with(data, ifelse(condition == FALSE, NA, ifelse(attend_preschool == 1, 1, 0)))
} else {
print("This indicator is only available in MICS")
}
# Note: variable "prim_age0_eduout" is replaced by "prim_age0"
if (data$survey[1] == "MICS") {
condition <- with(data, schage == prim_age0 - 1)
data$preschool_1ybefore = with(data, ifelse(condition == FALSE, NA, ifelse(attend_preschool == 1, 1, 0)))
} else {
print("This indicator is only available in MICS")
}
# CALCULATE: Attendance in higher education
condition <- with(data, schage >= 18 & schage <= 22)
data$attend_higher_1822 = with(data, ifelse(condition == FALSE, NA,
ifelse(attend_higher == 1, 1, 0)))
# CALCULATE: Education years for age between 20 and 24
condition <- with(data, schage >= 20 & schage <= 24)
data$eduyears_2024 = with(data, ifelse(condition == FALSE, NA,
ifelse(eduyears == 1, 1, 0)))
# CALCULATE: Less than 4 years of education
condition <- with(data, schage >= 20 & schage <= 24)
data$edu4_2024 = with(data, ifelse(condition == FALSE, NA,
ifelse(edu4 == 1, 1, 0)))
data <- read_dta("C:/WIDE/output/DHS/data/dhs_standardize.dta") # change this path
# CALCULATE: Completion by education level
# primary
condition <- with(data, schage >= prim_age1+3 & schage <= prim_age1+5) # age limits condition
data$comp_prim_v2 = with(data, ifelse(condition == FALSE, NA, # if age condition is FALSE, return NA
ifelse(comp_prim == 1, 1, 0))) # else if age condition is TRUE & comp_prim=1, return 1, otherwise (i.e. condition is TRUE & comp_prim=0), return 0
# lower secondary
condition <- with(data, schage >= lowsec_age1+3 & schage <= lowsec_age1+5)
data$comp_lowsec_v2 = with(data, ifelse(condition == FALSE, NA,
ifelse(comp_lowsec == 1, 1, 0)))
# upper secondary
condition <- with(data, schage >= upsec_age1+3 & schage <= upsec_age1+5)
data$comp_upsec_v2 = with(data, ifelse(condition == FALSE, NA,
ifelse(comp_upsec == 1, 1, 0)))
# CALCULATE: Completion by education level and age
# primary
condition <- with(data, schage >= 15 & schage <= 24)
data$comp_prim_1524 = with(data, ifelse(condition == FALSE, NA,
ifelse(comp_prim == 1, 1, 0)))
# lower secondary
condition <- with(data, schage >= 15 & schage <= 24)
data$comp_lowsec_1524 = with(data, ifelse(condition == FALSE, NA,
ifelse(comp_lowsec == 1, 1, 0)))
# upper secondary
condition <- with(data, schage >= 20 & schage <= 29)
data$comp_upsec_2029 = with(data, ifelse(condition == FALSE, NA,
ifelse(comp_upsec == 1, 1, 0)))
# CALCULATE: Never been to school
# primary
condition <- with(data, schage >= prim_age0+3 & schage <= prim_age0+6)
data$edu0_prim = with(data, ifelse(condition == FALSE, NA,
ifelse(edu0 == 1, 1, 0)))
# CALCULATE: Completion in higher education
condition <- with(data, schage >= 25 & schage <= 29)
data$comp_higher_2yrs_2529 = with(data, ifelse(condition == FALSE, NA,
ifelse(comp_higher_2yrs == 1, 1, 0)))
data$comp_higher_4yrs_2529 = with(data, ifelse(condition == FALSE, NA,
ifelse(comp_higher_4yrs == 1, 1, 0)))
condition <- with(data, schage >= 30 & schage <= 34)
data$comp_higher_4yrs_3034 = with(data, ifelse(condition == FALSE, NA,
ifelse(comp_higher_4yrs == 1, 1, 0)))
# CALCULATE: Out of school by education level
# primary (Note: variable "prim_age0_eduout" is replaced by "prim_age0")
condition <- with(data, schage >= prim_age0 & schage <= prim_age1_eduout)
data$eduout_prim = with(data, ifelse(condition == FALSE, NA,
ifelse(eduout == 1, 1, 0)))
# lower secondary
condition <- with(data, schage >= lowsec_age0_eduout & schage <= lowsec_age1_eduout)
data$eduout_lowsec = with(data, ifelse(condition == FALSE, NA,
ifelse(eduout == 1, 1, 0)))
# upper secondary
condition <- with(data, schage >= upsec_age0_eduout & schage <= upsec_age1_eduout)
data$eduout_upsec = with(data, ifelse(condition == FALSE, NA,
ifelse(eduout == 1, 1, 0)))
# CALCULATE: Attendance in preschool
# Note: These indicators are only available in MICS
if (data$survey[1] == "MICS") {
condition <- with(data, schage >= 3 & schage <= 4)
data$preschool_3 = with(data, ifelse(condition == FALSE, NA, ifelse(attend_preschool == 1, 1, 0)))
} else {
print("This indicator is only available in MICS")
}
# Note: variable "prim_age0_eduout" is replaced by "prim_age0"
if (data$survey[1] == "MICS") {
condition <- with(data, schage == prim_age0 - 1)
data$preschool_1ybefore = with(data, ifelse(condition == FALSE, NA, ifelse(attend_preschool == 1, 1, 0)))
} else {
print("This indicator is only available in MICS")
}
# CALCULATE: Attendance in higher education
condition <- with(data, schage >= 18 & schage <= 22)
data$attend_higher_1822 = with(data, ifelse(condition == FALSE, NA,
ifelse(attend_higher == 1, 1, 0)))
# CALCULATE: Education years for age between 20 and 24
condition <- with(data, schage >= 20 & schage <= 24)
data$eduyears_2024 = with(data, ifelse(condition == FALSE, NA,
ifelse(eduyears == 1, 1, 0)))
# CALCULATE: Less than 4 years of education
condition <- with(data, schage >= 20 & schage <= 24)
data$edu4_2024 = with(data, ifelse(condition == FALSE, NA,
ifelse(edu4 == 1, 1, 0)))
write.csv(data, "C:/Users/taiku/Documents/GEM UNESCO MBR/Rwide_calculate.csv", row.names = FALSE)
## you can use R like a calculator
1+1
2*2
math <- 2*2
math
## R is case sensitive
MATH ## this won't work!
math <- 2*3
math
getwd()
setwd("C:/Users/taiku/Documents/GEM UNESCO MBR/GitHub/wide2020/ilsa")
ilsa_mpl_jan21_long <-
bind_rows(
ilsa_mpl = vroom::vroom('update_mpl.csv'),
pirls_mpl = vroom::vroom('pirls_mpl.csv'),
pisa_mpl = vroom::vroom('pisa_mpl.csv'),
llece_mpl = vroom::vroom('llece_mpl.csv'),
seaplm_mpl = vroom::vroom('sea-plm_mpl.csv'),
timss19_mpl = vroom::vroom('timss19_mpl.csv'),
timss_mpl = vroom::vroom('timss_mpl.csv')
) %>% #filter(survey == 'PIRLS', category == 'Total') %>% pull(COUNTRY) %>% table
mutate(category = str_replace(category, fixed('Language'), fixed('Speaks Language at Home'))) %>%
mutate(Wealth = ifelse(is.na(Wealth), NA_character_, paste('Quintile', Wealth))) %>%
pivot_longer(cols = mlevel1_m:slevel4_no, names_to = 'indicator', values_drop_na = TRUE) %>%
filter(!str_detect(indicator, '_se')) %>%
filter(!COUNTRY %in% c(
'Abu Dhabi, UAE', 'Andalusia, Spain', 'Belgium (Flemish)', 'Belgium (French)',
'Buenos Aires, Argentina', 'Canada, Ontario', 'Canada, Quebec', 'Canada, Alberta', 'Canada, British Columbia', 'Dubai,UAE',
'Eng/Afr/Zulu â RSA (5)', 'Madrid, Spain', 'Moscow City, Russian Fed.', 'Scotland', 'Western Cape, RSA (9)', 'England',
'Northern Ireland', 'Taiwan, Province of China', 'Kosovo', 'Chinese Taipei', 'Gauteng, RSA (9)', 'Canada, Nova Scotia',
'Iceland (5th grade)', 'Maltese-Malta', 'Norway (5th grade)', 'Norway (4 th grade)', 'Morocco 6', 'Connecticut (USA)',
'Florida (USA)', 'Perm(Russian Federation)', 'Shanghai-China', 'Massachusetts (USA)'
)) %>%
mutate(iso_code3 = countrycode::countrycode(COUNTRY, 'country.name.en', 'iso3c')) %>%
filter(!is.na(iso_code3)) %>%
select(-COUNTRY, -iso_num)
library(magrittr)
library(tidyverse)
ilsa_mpl_jan21_long <-
bind_rows(
ilsa_mpl = vroom::vroom('update_mpl.csv'),
pirls_mpl = vroom::vroom('pirls_mpl.csv'),
pisa_mpl = vroom::vroom('pisa_mpl.csv'),
llece_mpl = vroom::vroom('llece_mpl.csv'),
seaplm_mpl = vroom::vroom('sea-plm_mpl.csv'),
timss19_mpl = vroom::vroom('timss19_mpl.csv'),
timss_mpl = vroom::vroom('timss_mpl.csv')
) %>% #filter(survey == 'PIRLS', category == 'Total') %>% pull(COUNTRY) %>% table
mutate(category = str_replace(category, fixed('Language'), fixed('Speaks Language at Home'))) %>%
mutate(Wealth = ifelse(is.na(Wealth), NA_character_, paste('Quintile', Wealth))) %>%
pivot_longer(cols = mlevel1_m:slevel4_no, names_to = 'indicator', values_drop_na = TRUE) %>%
filter(!str_detect(indicator, '_se')) %>%
filter(!COUNTRY %in% c(
'Abu Dhabi, UAE', 'Andalusia, Spain', 'Belgium (Flemish)', 'Belgium (French)',
'Buenos Aires, Argentina', 'Canada, Ontario', 'Canada, Quebec', 'Canada, Alberta', 'Canada, British Columbia', 'Dubai,UAE',
'Eng/Afr/Zulu â RSA (5)', 'Madrid, Spain', 'Moscow City, Russian Fed.', 'Scotland', 'Western Cape, RSA (9)', 'England',
'Northern Ireland', 'Taiwan, Province of China', 'Kosovo', 'Chinese Taipei', 'Gauteng, RSA (9)', 'Canada, Nova Scotia',
'Iceland (5th grade)', 'Maltese-Malta', 'Norway (5th grade)', 'Norway (4 th grade)', 'Morocco 6', 'Connecticut (USA)',
'Florida (USA)', 'Perm(Russian Federation)', 'Shanghai-China', 'Massachusetts (USA)'
)) %>%
mutate(iso_code3 = countrycode::countrycode(COUNTRY, 'country.name.en', 'iso3c')) %>%
filter(!is.na(iso_code3)) %>%
select(-COUNTRY, -iso_num)
library(countrycode)
table(ilsa_mpl_jan21_long$level)
table(level)
