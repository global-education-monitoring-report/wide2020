View(genderdiff)
View(ger_tertiary)
View(ger_tertiary)
library(readxl)
SDG_Feb2023_long <- read_excel("~/GEM UNESCO MBR/SDG_Feb2023_ long.xlsx")
View(SDG_Feb2023_long)
names(SDG_Feb2023_long)
table(SDG_Feb2023_long$`Indicator Name`)
genderdiff <- SDG_Feb2023_long %>%
mutate(gender = case_when(`Indicator Name` == 'Gross enrolment ratio for tertiary education, female (%)' ~ 'Female',
`Indicator Name` == 'Gross enrolment ratio for tertiary education, male (%)' ~ 'Male',
TRUE ~ "")) %>%
select(Country, Year, Value, gender) %>% group_by(Country) %>% filter(year == max(year))
genderdiff2 <- SDG_Feb2023_long %>%
mutate(gender = case_when(`Indicator Name` == 'Gross enrolment ratio for tertiary education, female (%)' ~ 'Female',
`Indicator Name` == 'Gross enrolment ratio for tertiary education, male (%)' ~ 'Male',
TRUE ~ "")) %>%
select(Country, Year, Value, gender) %>%
group_by(Country) %>% filter(year == max(year)) %>%
pivot_wider(names_from = gender, values_from = Value)
genderdiff2 <- SDG_Feb2023_long %>%
mutate(gender = case_when(`Indicator Name` == 'Gross enrolment ratio for tertiary education, female (%)' ~ 'Female',
`Indicator Name` == 'Gross enrolment ratio for tertiary education, male (%)' ~ 'Male',
TRUE ~ "")) %>%
select(Country, Year, Value, gender) %>%
group_by(Country) %>% filter(Year == max(Year)) %>%
pivot_wider(names_from = gender, values_from = Value)
genderdiff2 <- SDG_Feb2023_long %>%
mutate(gender = case_when(`Indicator Name` == 'Gross enrolment ratio for tertiary education, female (%)' ~ 'Female',
`Indicator Name` == 'Gross enrolment ratio for tertiary education, male (%)' ~ 'Male',
TRUE ~ "")) %>%
select(Country, Year, Value, gender) %>%
group_by(Country) %>% filter(Year == max(Year))
View(genderdiff2)
genderdiff2 <- SDG_Feb2023_long %>%
mutate(gender = case_when(`Indicator Name` == 'Gross enrolment ratio for tertiary education, female (%)' ~ 'Female',
`Indicator Name` == 'Gross enrolment ratio for tertiary education, male (%)' ~ 'Male',
TRUE ~ "")) %>%
select(Country, Year, Value, gender) %>%
group_by(Country) %>% filter(Year == max(Year)) %>% distinct() %>%
pivot_wider(names_from = gender, values_from = Value)
View(genderdiff2)
table(genderdiff2$Year)
genderdiff2 <- SDG_Feb2023_long %>%
mutate(gender = case_when(`Indicator Name` == 'Gross enrolment ratio for tertiary education, female (%)' ~ 'Female',
`Indicator Name` == 'Gross enrolment ratio for tertiary education, male (%)' ~ 'Male',
TRUE ~ "")) %>%
select(Country, Year, Value, gender) %>%
group_by(Country) %>% filter(Year == max(Year)) %>% distinct() %>%
pivot_wider(names_from = gender, values_from = Value) %>% filter(year > 2017)
genderdiff2 <- SDG_Feb2023_long %>%
mutate(gender = case_when(`Indicator Name` == 'Gross enrolment ratio for tertiary education, female (%)' ~ 'Female',
`Indicator Name` == 'Gross enrolment ratio for tertiary education, male (%)' ~ 'Male',
TRUE ~ "")) %>%
select(Country, Year, Value, gender) %>%
group_by(Country) %>% filter(Year == max(Year)) %>% distinct() %>%
pivot_wider(names_from = gender, values_from = Value) %>% filter(Year > 2017)
names(genderdiff2)
genderdiff2 <- SDG_Feb2023_long %>%
mutate(gender = case_when(`Indicator Name` == 'Gross enrolment ratio for tertiary education, female (%)' ~ 'Female',
`Indicator Name` == 'Gross enrolment ratio for tertiary education, male (%)' ~ 'Male',
TRUE ~ "")) %>%
select(Country, Year, Value, gender) %>%
group_by(Country) %>% filter(Year == max(Year)) %>% distinct() %>%
pivot_wider(names_from = gender, values_from = Value) %>% filter(Year > 2017) %>%
mutate(gendergap=Female-Male) %>% mutate(isthereadiff= case_when(gendergap => 3 ~ "signif",
genderdiff2 <- SDG_Feb2023_long %>%
mutate(gender = case_when(`Indicator Name` == 'Gross enrolment ratio for tertiary education, female (%)' ~ 'Female',
`Indicator Name` == 'Gross enrolment ratio for tertiary education, male (%)' ~ 'Male',
TRUE ~ "")) %>%
select(Country, Year, Value, gender) %>%
group_by(Country) %>% filter(Year == max(Year)) %>% distinct() %>%
pivot_wider(names_from = gender, values_from = Value) %>% filter(Year > 2017) %>%
mutate(gendergap=Female-Male) %>% mutate(isthereadiff = case_when(gendergap >= 3 ~ "signif",
Group < 3 ~  "non signif"))
genderdiff2 <- SDG_Feb2023_long %>%
mutate(gender = case_when(`Indicator Name` == 'Gross enrolment ratio for tertiary education, female (%)' ~ 'Female',
`Indicator Name` == 'Gross enrolment ratio for tertiary education, male (%)' ~ 'Male',
TRUE ~ "")) %>%
select(Country, Year, Value, gender) %>%
group_by(Country) %>% filter(Year == max(Year)) %>% distinct() %>%
pivot_wider(names_from = gender, values_from = Value) %>% filter(Year > 2017) %>%
mutate(gendergap=Female-Male) %>% mutate(isthereadiff = case_when(gendergap >= 3 ~ "signif",
gendergap < 3 ~  "non signif"))
View(genderdiff2)
genderdiff2 <- SDG_Feb2023_long %>%
mutate(gender = case_when(`Indicator Name` == 'Gross enrolment ratio for tertiary education, female (%)' ~ 'Female',
`Indicator Name` == 'Gross enrolment ratio for tertiary education, male (%)' ~ 'Male',
TRUE ~ "")) %>%
select(Country, Year, Value, gender) %>%
group_by(Country) %>% filter(Year == max(Year)) %>% distinct() %>%
pivot_wider(names_from = gender, values_from = Value) %>% filter(Year > 2017) %>%
mutate(gendergap=Female-Male) %>% mutate(isthereadiff = case_when(gendergap >= 3 ~ "signif",
gendergap < 3 ~  "non signif")) %>%
mutate(direction = case_when(gendergap > 0 ~ "femalesmore",
gendergap < 0 ~  "malesmore"))
table(genderdiff2$isthereadiff)
View(genderdiff2)
147-3
genderdiff2 <- SDG_Feb2023_long %>%
mutate(gender = case_when(`Indicator Name` == 'Gross enrolment ratio for tertiary education, female (%)' ~ 'Female',
`Indicator Name` == 'Gross enrolment ratio for tertiary education, male (%)' ~ 'Male',
TRUE ~ "")) %>%
select(Country, Year, Value, gender) %>%
group_by(Country) %>% filter(Year == max(Year)) %>% distinct() %>%
pivot_wider(names_from = gender, values_from = Value) %>% filter(Year > 2017) %>%
mutate(gendergap=Female-Male) %>% mutate(isthereadiff = case_when(gendergap >= 3 ~ "signif",
gendergap < 3 ~  "non signif")) %>%
mutate(direction = case_when(gendergap > 0 ~ "femalesmore",
gendergap < 0 ~  "malesmore")) %>% filter(Country="China, Hong Kong Special Administrative Region")
genderdiff2 <- SDG_Feb2023_long %>%
mutate(gender = case_when(`Indicator Name` == 'Gross enrolment ratio for tertiary education, female (%)' ~ 'Female',
`Indicator Name` == 'Gross enrolment ratio for tertiary education, male (%)' ~ 'Male',
TRUE ~ "")) %>%
select(Country, Year, Value, gender) %>%
group_by(Country) %>% filter(Year == max(Year)) %>% distinct() %>%
pivot_wider(names_from = gender, values_from = Value) %>% filter(Year > 2017) %>%
mutate(gendergap=Female-Male) %>% mutate(isthereadiff = case_when(gendergap >= 3 ~ "signif",
gendergap < 3 ~  "non signif")) %>%
mutate(direction = case_when(gendergap > 0 ~ "femalesmore",
gendergap < 0 ~  "malesmore")) %>% filter(Country=="China, Hong Kong Special Administrative Region")
genderdiff2 <- SDG_Feb2023_long %>%
mutate(gender = case_when(`Indicator Name` == 'Gross enrolment ratio for tertiary education, female (%)' ~ 'Female',
`Indicator Name` == 'Gross enrolment ratio for tertiary education, male (%)' ~ 'Male',
TRUE ~ "")) %>%
select(Country, Year, Value, gender) %>%
group_by(Country) %>% filter(Year == max(Year)) %>% distinct() %>%
pivot_wider(names_from = gender, values_from = Value) %>% filter(Year > 2017) %>%
mutate(gendergap=Female-Male) %>% mutate(isthereadiff = case_when(gendergap >= 3 ~ "signif",
gendergap < 3 ~  "non signif")) %>%
mutate(direction = case_when(gendergap > 0 ~ "femalesmore",
gendergap < 0 ~  "malesmore")) %>% filter(!Country=="China, Hong Kong Special Administrative Region")
table(genderdiff2$isthereadiff)
View(genderdiff)
genderdiff2 <- SDG_Feb2023_long %>%
mutate(gender = case_when(`Indicator Name` == 'Gross enrolment ratio for tertiary education, female (%)' ~ 'Female',
`Indicator Name` == 'Gross enrolment ratio for tertiary education, male (%)' ~ 'Male',
TRUE ~ "")) %>%
select(Country, Year, Value, gender) %>%
group_by(Country) %>% filter(Year == max(Year)) %>% distinct() %>%
pivot_wider(names_from = gender, values_from = Value) %>% filter(Year > 2017) %>%
mutate(gendergap=Female-Male) %>% mutate(isthereadiff = case_when(gendergap >= 3 ~ "signif",
gendergap < 3 ~  "non signif")) %>%
mutate(direction = case_when(gendergap > 0 ~ "femalesmore",
gendergap < 0 ~  "malesmore")) %>% filter(!Country=="China, Hong Kong Special Administrative Region")
View(genderdiff2)
genderdiff2 <- SDG_Feb2023_long %>%
mutate(gender = case_when(`Indicator Name` == 'Gross enrolment ratio for tertiary education, female (%)' ~ 'Female',
`Indicator Name` == 'Gross enrolment ratio for tertiary education, male (%)' ~ 'Male',
TRUE ~ "")) %>%
select(Country, Year, Value, gender) %>%
group_by(Country) %>% filter(Year == max(Year)) %>% distinct() %>%
pivot_wider(names_from = gender, values_from = Value) %>% filter(Year > 2017) %>%
mutate(gendergap=Female-Male) %>% mutate(isthereadiff = case_when(abs(gendergap) >= 3 ~ "signif",
abs(gendergap) < 3 ~  "non signif")) %>%
mutate(direction = case_when(gendergap > 0 ~ "femalesmore",
gendergap < 0 ~  "malesmore")) %>% filter(!Country=="China, Hong Kong Special Administrative Region")
table(genderdiff2$isthereadiff)
table(genderdiff2$isthereadiff)
table(genderdiff2$isthereadiff, genderdiff2$direction)
sheets <- list("gender diff in tertiary" = genderdiff2)
write.xlsx(sheets, file = "C:/Users/mm_barrios-rivera/Documents/GEM UNESCO MBR/sdg432.xlsx")
write_xlsx(sheets, file = "C:/Users/mm_barrios-rivera/Documents/GEM UNESCO MBR/sdg432.xlsx")
#excel
library(writexl)
library(openxlsx)
sheets <- list("gender diff in tertiary" = genderdiff2)
write_xlsx(sheets, file = "C:/Users/mm_barrios-rivera/Documents/GEM UNESCO MBR/sdg432.xlsx")
write.xlsx(sheets, file = "C:/Users/mm_barrios-rivera/Documents/GEM UNESCO MBR/sdg432.xlsx")
View(varlabels)
ggplot(f2_pivot, aes(x=chg1520, fill =incgroup2)) +
geom_histogram(binwidth=1, col=I("grey")) +
scale_fill_manual(values = c( "#96c11f", "#1980D9", "#E60080"), labels = c(
"High" = "High income",
"Upper middle" = "Upper-middle income",
"Lower middle" = "Lower-middle income" ), limits = c("High", "Upper middle", "Lower middle" )) +
xlab("Change in participation rate (percentage points) ") + ylab("") +
theme(panel.background = element_blank(), axis.text.y = element_blank(), axis.ticks.y = element_blank(),
legend.title = element_blank(), legend.position = "bottom")
path2uisdata2 <- 'C:/Users/mm_barrios-rivera/Documents/GEM UNESCO MBR/UIS info/'
uis_clean <- function(uis_data) {
print(table(uis_data$qualifier))
mutate(uis_data, value = ifelse(magnitude == 'NA' & value == 0, NA, value)) %>%
mutate(indicator_id = toupper(indicator_id))
}
indicators2extract <- c(
'ICTSKILLATTACH', 'ICTSKILLCONNEC', 'ICTSKILLCOPI',  'ICTSKILLPROGLANG',  'ICTSKILLTRANSFERFILE',
'ICTSKILLCREAT', 'ICTSKILLDUPLIC', 'ICTSKILLFORMULA',  'ICTSKILLSOFTWARE'
)
regions <-   vroom::vroom(paste0(path2uisdata2, 'SDG_REGION.csv'), na = '')  %>%
mutate(type = case_when(
str_detect(REGION_ID, "WB:") &  str_detect(REGION_ID, "Income|income")  ~ 'WB',
str_detect(REGION_ID, "GPE:") &  str_detect(REGION_ID, "Income|income") ~ 'GPE',
str_detect(REGION_ID, "ESCAP:") &  str_detect(REGION_ID, "Income|income") ~ 'ESCAP', TRUE ~ 'other' )) %>%
filter(!str_detect(REGION_ID, '(excluding high income)')) %>%
filter(!str_detect(REGION_ID, 'Low & middle income')) %>%
filter(!str_detect(type, 'other')) %>%
#choose ESCAP, GPE, WB
filter(str_detect(type, 'WB')) %>%
rename(country_id=COUNTRY_ID)
countrynames <- vroom::vroom(paste0(path2uisdata2, 'countries_updated.csv'), na = '') %>%
rename(country_id=iso3c) %>% select(country_id, annex_name)
varlabels <-  read.csv(paste0(path2uisdata2, 'SDG_LABEL.csv'), na = '') %>% rename(indicator_id=INDICATOR_ID)
disaggs_uis <-
vroom::vroom(paste0(path2uisdata2, 'SDG_DATA_NATIONAL.csv'), na = '') %>%
filter(str_detect(indicator_id, paste(indicators2extract, collapse = '|'))) %>%
#rid of gender and GPIA
filter(!str_detect(indicator_id, 'GPIA'), !str_detect(indicator_id, fixed('.M')),  !str_detect(indicator_id, fixed('.F'))) %>%
uis_clean %>%
select(-qualifier, -magnitude) %>%
#var labels
left_join(varlabels, by="indicator_id") %>%
mutate(shortlab=str_replace(INDICATOR_LABEL_EN, pattern='\\s*\\([^\\)]+\\)',replacement = '')) %>%
mutate(shortlab=str_replace(shortlab, pattern='Proportion of youth and adults who',replacement = '')) %>%
mutate(shortlab=str_replace(shortlab, pattern=', both sexes', replacement = '')) %>%
mutate(shortlab=str_replace(shortlab, pattern='\\s*\\([^\\)]+\\)',replacement = '')) %>%
#regions countries belong to
left_join(regions ,by="country_id", multiple = "all") %>%
mutate(regionnumber = case_when(
str_detect(incgroup2, 'High') ~ 1,
str_detect(incgroup2, 'Upper middle') ~ 2 ,
str_detect(incgroup2, 'Lower middle') ~ 3,
str_detect(incgroup2, 'Low') ~ 4,
TRUE ~ NA ))
summary <- disaggs_uis %>% group_by(indicator_id, regionnumber, incgroup2,  shortlab) %>%
summarise(n = n(), mean_ind = mean(value), sd = sd(value), max = max(value),
min = min(value), min_year=min(year), max_year=max(year)) %>%  mutate(shortestlab = case_when(
str_detect(shortlab, 'connected and installed') ~ 'connnected/installed new devices',
str_detect(shortlab, 'copied or moved a file or folder') ~ 'copied/moved file' ,
str_detect(shortlab, 'have created electronic presentations with presentation software') ~ 'electronic presentations',
str_detect(shortlab, 'have found, downloaded, installed and configured software') ~ 'found/downloaded/installed software',
str_detect(shortlab, 'have sent e-mails with attached files') ~ 'emailed with attachments',
str_detect(shortlab, 'have transferred files between') ~ 'transfer files between devices',
str_detect(shortlab, 'have used basic arithmetic formulae in a spreadsheet') ~ 'spreadsheets formulae',
str_detect(shortlab, 'have used copy and paste tools to duplicate or move information within a document') ~ 'used copy/paste',
str_detect(shortlab, 'have wrote a computer program using') ~ 'computer programming',
TRUE ~ NA_character_ )) %>% arrange(mean_ind) %>% mutate(shortestlab = str_to_sentence(shortestlab))
disaggs_uis <-
vroom::vroom(paste0(path2uisdata2, 'SDG_DATA_NATIONAL.csv'), na = '') %>%
filter(str_detect(indicator_id, paste(indicators2extract, collapse = '|'))) %>%
#rid of gender and GPIA
filter(!str_detect(indicator_id, 'GPIA'), !str_detect(indicator_id, fixed('.M')),  !str_detect(indicator_id, fixed('.F'))) %>%
uis_clean %>%
select(-qualifier, -magnitude) %>%
#var labels
left_join(varlabels, by="indicator_id") %>%
mutate(shortlab=str_replace(INDICATOR_LABEL_EN, pattern='\\s*\\([^\\)]+\\)',replacement = '')) %>%
mutate(shortlab=str_replace(shortlab, pattern='Proportion of youth and adults who',replacement = '')) %>%
mutate(shortlab=str_replace(shortlab, pattern=', both sexes', replacement = '')) %>%
mutate(shortlab=str_replace(shortlab, pattern='\\s*\\([^\\)]+\\)',replacement = '')) %>%
#regions countries belong to
left_join(regions ,by="country_id", multiple = "all") %>%
mutate(regionnumber = case_when(
str_detect(incgroup2, 'High') ~ 1,
str_detect(incgroup2, 'Upper middle') ~ 2 ,
str_detect(incgroup2, 'Lower middle') ~ 3,
str_detect(incgroup2, 'Low') ~ 4,
TRUE ~ NA ))
View(regions)
#updating this
regions <-   vroom::vroom(paste0(path2uisdata2, 'countries_updated.csv'), na = '') %>%
rename(country_id=iso3c)  %>% select(country_id, GEMR.region, income_group, income_subgroup) %>%
unite(incgroup2, c("income_group", "income_subgroup")) %>%
mutate(incgroup2=str_replace(incgroup2, pattern='_NA',replacement = '')) %>%
mutate(incgroup2=str_replace(incgroup2, pattern='Middle_',replacement = '')) %>%
filter(!incgroup2=='NA') %>%  filter(!incgroup2=='Not Classified')
disaggs_uis <-
vroom::vroom(paste0(path2uisdata2, 'SDG_DATA_NATIONAL.csv'), na = '') %>%
filter(str_detect(indicator_id, paste(indicators2extract, collapse = '|'))) %>%
#rid of gender and GPIA
filter(!str_detect(indicator_id, 'GPIA'), !str_detect(indicator_id, fixed('.M')),  !str_detect(indicator_id, fixed('.F'))) %>%
uis_clean %>%
select(-qualifier, -magnitude) %>%
#var labels
left_join(varlabels, by="indicator_id") %>%
mutate(shortlab=str_replace(INDICATOR_LABEL_EN, pattern='\\s*\\([^\\)]+\\)',replacement = '')) %>%
mutate(shortlab=str_replace(shortlab, pattern='Proportion of youth and adults who',replacement = '')) %>%
mutate(shortlab=str_replace(shortlab, pattern=', both sexes', replacement = '')) %>%
mutate(shortlab=str_replace(shortlab, pattern='\\s*\\([^\\)]+\\)',replacement = '')) %>%
#regions countries belong to
left_join(regions ,by="country_id", multiple = "all") %>%
mutate(regionnumber = case_when(
str_detect(incgroup2, 'High') ~ 1,
str_detect(incgroup2, 'Upper middle') ~ 2 ,
str_detect(incgroup2, 'Lower middle') ~ 3,
str_detect(incgroup2, 'Low') ~ 4,
TRUE ~ NA ))
latest_year <- disaggs_uis %>% group_by(country_id, indicator_id, ) %>%
filter(year == max(year)) %>% arrange(value) %>% group_by(incgroup2, shortlab) %>%
#slice(1:10) %>%
mutate(shortestlab = case_when(
str_detect(shortlab, 'connected and installed') ~ 'connnected/installed new devices',
str_detect(shortlab, 'copied or moved a file or folder') ~ 'copied/moved file' ,
str_detect(shortlab, 'have created electronic presentations with presentation software') ~ 'electronic presentations',
str_detect(shortlab, 'have found, downloaded, installed and configured software') ~ 'found/downloaded/installed software',
str_detect(shortlab, 'have sent e-mails with attached files') ~ 'emailed with attachments',
str_detect(shortlab, 'have transferred files between') ~ 'transfer files between devices',
str_detect(shortlab, 'have used basic arithmetic formulae in a spreadsheet') ~ 'spreadsheets formulae',
str_detect(shortlab, 'have used copy and paste tools to duplicate or move information within a document') ~ 'used copy/paste',
str_detect(shortlab, 'have wrote a computer program using') ~ 'computer programming',
TRUE ~ NA_character_ )) %>% mutate(shortestlab = str_to_sentence(shortestlab))
summary <- disaggs_uis %>% group_by(indicator_id, regionnumber, incgroup2,  shortlab) %>%
summarise(n = n(), mean_ind = mean(value), sd = sd(value), max = max(value),
min = min(value), min_year=min(year), max_year=max(year)) %>%  mutate(shortestlab = case_when(
str_detect(shortlab, 'connected and installed') ~ 'connnected/installed new devices',
str_detect(shortlab, 'copied or moved a file or folder') ~ 'copied/moved file' ,
str_detect(shortlab, 'have created electronic presentations with presentation software') ~ 'electronic presentations',
str_detect(shortlab, 'have found, downloaded, installed and configured software') ~ 'found/downloaded/installed software',
str_detect(shortlab, 'have sent e-mails with attached files') ~ 'emailed with attachments',
str_detect(shortlab, 'have transferred files between') ~ 'transfer files between devices',
str_detect(shortlab, 'have used basic arithmetic formulae in a spreadsheet') ~ 'spreadsheets formulae',
str_detect(shortlab, 'have used copy and paste tools to duplicate or move information within a document') ~ 'used copy/paste',
str_detect(shortlab, 'have wrote a computer program using') ~ 'computer programming',
TRUE ~ NA_character_ )) %>% arrange(mean_ind) %>% mutate(shortestlab = str_to_sentence(shortestlab))
summary_high <- summary %>% filter(shortestlab=='spreadsheets formulae' |
shortestlab=='electronic presentations'|
shortestlab=='computer programming'|
shortestlab=='transfer files between devices')
ly_high <- latest_year %>%  filter(shortestlab=='Spreadsheets formulae' |
shortestlab=='Electronic presentations'|
shortestlab=='Computer programming'|
shortestlab=='Transfer files between devices')
#FIX
allskills <- ggplot(summary, aes(x=as.character(shortestlab), y = mean_ind, fill = factor(incgroup2, levels= c("High", "Upper middle", "Lower middle", "Low")))) +
geom_col(position = "dodge2")  +
theme(legend.position="bottom",  axis.title.x=element_blank(), legend.title=element_blank(),
panel.background = element_blank(), plot.background = element_blank()) +
scale_fill_manual(values = c("#E60080", "#96c11f", "#1980D9", "#009a93"),
limits = c("High", "Upper middle", "Lower middle", "Low")) +
ylab("%")
plot(allskills)
#FIX
dots_high <- ggplot(data = ly_high) +
geom_point(mapping = aes(x = value, y = as.character(incgroup2), color=incgroup2),
alpha = 0.15,  size = 15) +
geom_point(mapping = aes(x = value, y = as.character(incgroup2), color=incgroup2),
size = 15, shape=21, stroke = 1) +
theme(axis.title.y=element_blank(), legend.position = "none",
panel.background = element_blank(), plot.background = element_blank(),
axis.text.y = element_text(size = 15)) +
scale_y_discrete(labels = c(
"High" = "High income",
"Upper middle" = "Upper-middle income",
"Lower middle" = "Lower-middle income",
"Low" = "Low income" ), limits = c("High", "Upper middle", "Lower middle" ,  "Low"))     +
scale_color_manual(values = c("#E60080", "#96c11f", "#1980D9", "#009a93"),
limits = c("High", "Upper middle", "Lower middle", "Low")) +
xlab("Proportion of respondents (%)")
plot(dots_high)
#FIX
allskills <- ggplot(summary, aes(x=as.character(shortestlab), y = mean_ind, fill = factor(incgroup2, levels= c("High", "Upper middle", "Lower middle", "Low")))) +
geom_col(position = "dodge2")  +
theme(legend.position="bottom",  axis.title.x=element_blank(), legend.title=element_blank(),
panel.background = element_blank(), plot.background = element_blank()) +
scale_fill_manual(values = c("#E60080", "#96c11f", "#1980D9", "#009a93"),
limits = c("High", "Upper middle", "Lower middle", "Low")) +
ylab("%")
plot(allskills)
#FIX
dots_high <- ggplot(data = ly_high) +
geom_point(mapping = aes(x = value, y = as.character(incgroup2), color=incgroup2),
alpha = 0.15,  size = 15) +
geom_point(mapping = aes(x = value, y = as.character(incgroup2), color=incgroup2),
size = 15, shape=21, stroke = 1) +
theme(axis.title.y=element_blank(), legend.position = "none",
panel.background = element_blank(), plot.background = element_blank(),
axis.text.y = element_text(size = 15)) +
scale_y_discrete(labels = c(
"High" = "High income",
"Upper middle" = "Upper-middle income",
"Lower middle" = "Lower-middle income",
"Low" = "Low income" ), limits = c("High", "Upper middle", "Lower middle" ,  "Low"))     +
scale_color_manual(values = c("#E60080", "#96c11f", "#1980D9", "#009a93"),
limits = c("High", "Upper middle", "Lower middle", "Low")) +
xlab("Proportion of respondents (%)")
plot(dots_high)
View(ly_high)
plot(dots_high) + facet_grid( ~ shortestlab)
plot(dots_high) + facet_grid(shortestlab ~ )
plot(dots_high) + facet_grid(shortestlab ~ )
#FIX
dots_high <- ggplot(data = latest_year) +
geom_point(mapping = aes(x = value, y = as.character(incgroup2), color=incgroup2),
alpha = 0.15,  size = 15) +
geom_point(mapping = aes(x = value, y = as.character(incgroup2), color=incgroup2),
size = 15, shape=21, stroke = 1) +
theme(axis.title.y=element_blank(), legend.position = "none",
panel.background = element_blank(), plot.background = element_blank(),
axis.text.y = element_text(size = 15)) +
scale_y_discrete(labels = c(
"High" = "High income",
"Upper middle" = "Upper-middle income",
"Lower middle" = "Lower-middle income",
"Low" = "Low income" ), limits = c("High", "Upper middle", "Lower middle" ,  "Low"))     +
scale_color_manual(values = c("#E60080", "#96c11f", "#1980D9", "#009a93"),
limits = c("High", "Upper middle", "Lower middle", "Low")) +
xlab("Proportion of respondents (%)")
plot(dots_high) + facet_grid( ~ shortestlab)
plot(dots_high) + facet_grid( ~ shortestlab,  ncol=4)
#FIX
dots_high <- ggplot(data = ly_high) +
geom_point(mapping = aes(x = value, y = as.character(incgroup2), color=incgroup2),
alpha = 0.15,  size = 15) +
geom_point(mapping = aes(x = value, y = as.character(incgroup2), color=incgroup2),
size = 15, shape=21, stroke = 1) +
theme(axis.title.y=element_blank(), legend.position = "none",
panel.background = element_blank(), plot.background = element_blank(),
axis.text.y = element_text(size = 15)) +
scale_y_discrete(labels = c(
"High" = "High income",
"Upper middle" = "Upper-middle income",
"Lower middle" = "Lower-middle income",
"Low" = "Low income" ), limits = c("High", "Upper middle", "Lower middle" ,  "Low"))     +
scale_color_manual(values = c("#E60080", "#96c11f", "#1980D9", "#009a93"),
limits = c("High", "Upper middle", "Lower middle", "Low")) +
xlab("Proportion of respondents (%)")
plot(dots_high) + facet_grid( ~ shortestlab,  nrow=4)
plot(dots_high) + facet_grid( ~ shortestlab)
plot(dots_high) + facet_grid( ~ shortestlab, nrow = 2, ncol= 2)
#FIX
dots_high <- ggplot(data = ly_high) +
geom_point(mapping = aes(x = value, y = as.character(incgroup2), color=incgroup2),
alpha = 0.15,  size = 15) +
geom_point(mapping = aes(x = value, y = as.character(incgroup2), color=incgroup2),
size = 15, shape=21, stroke = 1) +
theme(axis.title.y=element_blank(), legend.position = "none",
panel.background = element_blank(), plot.background = element_blank(),
axis.text.y = element_text(size = 15)) +
scale_y_discrete(labels = c(
"High" = "High income",
"Upper middle" = "Upper-middle income",
"Lower middle" = "Lower-middle income",
"Low" = "Low income" ), limits = c("High", "Upper middle", "Lower middle" ,  "Low"))     +
scale_color_manual(values = c("#E60080", "#96c11f", "#1980D9", "#009a93"),
limits = c("High", "Upper middle", "Lower middle", "Low")) +
xlab("Proportion of respondents (%)")
plot(dots_high) + facet_wrap( ~ shortestlab)
#FIX
dots_high <- ggplot(data = latest_year) +
geom_point(mapping = aes(x = value, y = as.character(incgroup2), color=incgroup2),
alpha = 0.15,  size = 15) +
geom_point(mapping = aes(x = value, y = as.character(incgroup2), color=incgroup2),
size = 15, shape=21, stroke = 1) +
theme(axis.title.y=element_blank(), legend.position = "none",
panel.background = element_blank(), plot.background = element_blank(),
axis.text.y = element_text(size = 15)) +
scale_y_discrete(labels = c(
"High" = "High income",
"Upper middle" = "Upper-middle income",
"Lower middle" = "Lower-middle income",
"Low" = "Low income" ), limits = c("High", "Upper middle", "Lower middle" ,  "Low"))     +
scale_color_manual(values = c("#E60080", "#96c11f", "#1980D9", "#009a93"),
limits = c("High", "Upper middle", "Lower middle", "Low")) +
xlab("Proportion of respondents (%)")
plot(dots_high) + facet_wrap( ~ shortestlab)
preciselyskill <- latest_year %>%  filter(shortestlab=='Spreadsheets formulae' )
#FIX
dots_high <- ggplot(data = preciselyskill) +
geom_point(mapping = aes(x = value, y = as.character(incgroup2), color=incgroup2),
alpha = 0.15,  size = 15) +
geom_point(mapping = aes(x = value, y = as.character(incgroup2), color=incgroup2),
size = 15, shape=21, stroke = 1) +
theme(axis.title.y=element_blank(), legend.position = "none",
panel.background = element_blank(), plot.background = element_blank(),
axis.text.y = element_text(size = 15)) +
scale_y_discrete(labels = c(
"High" = "High income",
"Upper middle" = "Upper-middle income",
"Lower middle" = "Lower-middle income",
"Low" = "Low income" ), limits = c("High", "Upper middle", "Lower middle" ,  "Low"))     +
scale_color_manual(values = c("#E60080", "#96c11f", "#1980D9", "#009a93"),
limits = c("High", "Upper middle", "Lower middle", "Low")) +
xlab("Proportion of respondents (%)")
plot(dots_high)
preciselyskill <- latest_year %>%  filter(shortestlab=='Transfer files between devices' )
#FIX
dots_high <- ggplot(data = preciselyskill) +
geom_point(mapping = aes(x = value, y = as.character(incgroup2), color=incgroup2),
alpha = 0.15,  size = 15) +
geom_point(mapping = aes(x = value, y = as.character(incgroup2), color=incgroup2),
size = 15, shape=21, stroke = 1) +
theme(axis.title.y=element_blank(), legend.position = "none",
panel.background = element_blank(), plot.background = element_blank(),
axis.text.y = element_text(size = 15)) +
scale_y_discrete(labels = c(
"High" = "High income",
"Upper middle" = "Upper-middle income",
"Lower middle" = "Lower-middle income",
"Low" = "Low income" ), limits = c("High", "Upper middle", "Lower middle" ,  "Low"))     +
scale_color_manual(values = c("#E60080", "#96c11f", "#1980D9", "#009a93"),
limits = c("High", "Upper middle", "Lower middle", "Low")) +
xlab("Proportion of respondents (%)")
plot(dots_high)
preciselyskill <- latest_year %>%  filter(shortestlab=='Electronic presentations' )
#FIX
dots_high <- ggplot(data = preciselyskill) +
geom_point(mapping = aes(x = value, y = as.character(incgroup2), color=incgroup2),
alpha = 0.15,  size = 15) +
geom_point(mapping = aes(x = value, y = as.character(incgroup2), color=incgroup2),
size = 15, shape=21, stroke = 1) +
theme(axis.title.y=element_blank(), legend.position = "none",
panel.background = element_blank(), plot.background = element_blank(),
axis.text.y = element_text(size = 15)) +
scale_y_discrete(labels = c(
"High" = "High income",
"Upper middle" = "Upper-middle income",
"Lower middle" = "Lower-middle income",
"Low" = "Low income" ), limits = c("High", "Upper middle", "Lower middle" ,  "Low"))     +
scale_color_manual(values = c("#E60080", "#96c11f", "#1980D9", "#009a93"),
limits = c("High", "Upper middle", "Lower middle", "Low")) +
xlab("Proportion of respondents (%)")
plot(dots_high)
